/******************************************************************************
* Copyright (c) 2000-2018 Ericsson Telecom AB
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v2.0
* which accompanies this distribution, and is available at
* https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html
*
* Contributors:
*   Elemer Lelik - initial implementation and initial documentation
*   Endre Kulcsar
******************************************************************************/
//
//  File:          http_jabber_org_protocol_disco_info.ttcn
//  Description:
//  References:
//  Rev:           R3A
//  Prodnr:        CNL 113 775
//
////////////////////////////////////////////////////////////////////////////////
//
//	Generated from file(s):
//
//	- disco#info.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "http://jabber.org/protocol/disco#info" */
//
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//
//
//XEP-0030: Service Discovery
//
//
////////////////////////////////////////////////////////////////////////////////



module http_jabber_org_protocol_disco_info {


import from XSD all;
import from jabber_x_data all; //to implement XEP-0128:Service Discovery Extensions

/* The protocol documented by this schema is defined in
      XEP-0030: http://www.xmpp.org/extensions/xep-0030.html */


type record Query
{
	XSD.String node optional,
	record {
		record length(1 .. infinity) of Identity identity_list,
                record length(1 .. infinity) of Feature feature_list,
                X  x  optional  //to implement XEP-0128:Service Discovery Extensions
	} sequence optional
}
with {
variant "name as uncapitalized";
variant "element";
variant (node) "attribute";
variant (sequence) "untagged";
variant (sequence.identity_list) "untagged";
  variant (sequence.feature_list) "untagged";
  variant (sequence.x) "namespace as 'jabber:x:data' prefix 'xdata'";
};


type record Identity
{
	NonEmptyString category,
	XSD.String name optional,
	NonEmptyString type_//,
	//Empty base
}
with {
variant "name as uncapitalized";
variant "element";
variant (category) "attribute";
variant (name) "attribute";
variant (type_) "name as 'type'";
variant (type_) "attribute";
//variant (base) "untagged";
};


type record Feature
{
	XSD.String var_//,
	//Empty base
}
with {
variant "name as uncapitalized";
variant "element";
variant (var_) "name as 'var'";
variant (var_) "attribute";
//variant (base) "untagged";
};


type XSD.String NonEmptyString length(1 .. infinity)
with {
variant "name as uncapitalized";
};


type enumerated Empty
{
	x
}
with {
variant "text 'x' as ''";
variant "name as uncapitalized";
};


}
with {
encode "XML";
variant "namespace as 'http://jabber.org/protocol/disco#info'";
variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
variant "elementFormQualified";
}
