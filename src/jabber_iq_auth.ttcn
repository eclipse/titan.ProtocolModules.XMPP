/******************************************************************************
* Copyright (c) 2000-2018 Ericsson Telecom AB
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Eclipse Public License v2.0
* which accompanies this distribution, and is available at
* https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.html
*
* Contributors:
*   Elemer Lelik - initial implementation and initial documentation
*   Endre Kulcsar
******************************************************************************/
//
//  File:          jabber_iq_auth.ttcn
//  Description:
//  References:
//  Rev:           R3A
//  Prodnr:        CNL 113 775
//
////////////////////////////////////////////////////////////////////////////////
//
//	Generated from file(s):
//
//	- auth.xsd
//			/* xml version = "1.0" encoding = "UTF-8" */
//			/* targetnamespace = "jabber:iq:auth" */
//
////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////
//
//
//XEP-0078: Non-SASL Authentication
//
//
////////////////////////////////////////////////////////////////////////////////



module jabber_iq_auth {


import from XSD all;


/* NOTE WELL: Non-SASL Authentication via the jabber:iq:auth */
/* protocol has been superseded by SASL Authentication as */
/* defined in RFC 3920 and RFC 6120, and is now obsolete. */
/* For historical purposes, the protocol documented by this 
      schema is defined in XEP-0078: 

      http://www.xmpp.org/extensions/xep-0078.html */


type record Query
{
	XSD.String username optional,
	union {
		record length(0 .. 1) of XSD.String password_list,
		record length(1) of XSD.String digest_list
	} choice,
	XSD.String resource optional
}
with {
variant "name as uncapitalized";
variant "element";
variant (choice) "untagged";
variant (choice.password_list) "untagged";
variant (choice.password_list[-]) "name as 'password'";
variant (choice.digest_list) "untagged";
variant (choice.digest_list[-]) "name as 'digest'";
};


}
with {
encode "XML";
variant "namespace as 'jabber:iq:auth'";
variant "controlNamespace 'http://www.w3.org/2001/XMLSchema-instance' prefix 'xsi'";
variant "elementFormQualified";
}
